mat3 rotate(float theta, vec3 axis)
{
    axis = normalize(axis);
    float sinTheta = sin(theta), cosTheta = cos(theta);

    mat3 rotateMatrix = mat3(
        cosTheta + axis.x * axis.x * (1. - cosTheta), axis.x * axis.y * (1. - cosTheta) + axis.z * sinTheta, axis.x * axis.z * (1. - cosTheta) - axis.y * sinTheta,
        axis.x * axis.y * (1. - cosTheta) - axis.z * sinTheta, cosTheta + axis.y * axis.y * (1. - cosTheta), axis.y * axis.z * (1. - cosTheta) + axis.x * sinTheta,
        axis.x * axis.z * (1. - cosTheta) + axis.y * sinTheta, axis.y * axis.z * (1. - cosTheta) - axis.x * sinTheta, cosTheta + axis.z * axis.z * (1. - cosTheta)
    );
    
    return rotateMatrix;
}

float hash(float n) {
    return fract(sin(n)*43758.5453);
}

float noise_blur(vec2 p)
{
    return hash(p.x + p.y*57.0);
}

float valnoise(vec2 p)
{
    vec2 c=floor(p);
    vec2 f=smoothstep(0.,1.,fract(p));
    return mix (mix(noise_blur(c+vec2(0,0)), noise_blur(c+vec2(1,0)), f.x),
                mix(noise_blur(c+vec2(0,1)), noise_blur(c+vec2(1,1)), f.x), f.y);
}



